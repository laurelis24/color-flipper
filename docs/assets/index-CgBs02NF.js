var c=Object.defineProperty;var m=(r,e,t)=>e in r?c(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var n=(r,e,t)=>m(r,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&i(l)}).observe(document,{childList:!0,subtree:!0});function t(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(o){if(o.ep)return;o.ep=!0;const s=t(o);fetch(o.href,s)}})();class p{addRestartGameContainer(e){const t=document.createElement("div"),i=document.createElement("h1"),o=document.createElement("button");t.classList.add("restart-game-container"),i.innerText="You won!",o.innerText="Restart!",o.addEventListener("click",()=>{e(),document.body.removeChild(t)}),t.append(i,o),document.body.appendChild(t)}}class u{constructor(e,t){this.el=document.createElement("div"),this.el.classList.add("color"),this.el.dataset.id=t,this.color=e}flip(){this.el.classList.add("show"),this.el.style.backgroundColor=this.color}hide(){this.el.classList.remove("show"),this.el.style.backgroundColor=""}}class C{generateRandomColors(e){const t=[...e],i=[];for(let o=0;o<e.length*2;o++){const s=Math.floor(Math.random()*t.length),l=t[s];i.push(new u(l,o+1)),i.filter(h=>h.color===l).length===2&&t.splice(s,1)}return i}}const d=document.getElementById("points");class f{constructor(e,t){n(this,"gameLogic",()=>{this.generatedColors.forEach(e=>{e.el.addEventListener("click",()=>this.flipColor(e))})});this.dom=new p,this.colors=e,this.randomColorGenerator=new C,this.generatedColors=this.randomColorGenerator.generateRandomColors(this.colors),this.points=0,this.flippedColors=[],this.onRestart=t,this.twoColors=[]}async flipColor(e){this.twoColors.some(t=>t.el.dataset.id===e.el.dataset.id)||this.twoColors.length>=2||this.flippedColors.some(t=>t===e.color)||(e.flip(),this.twoColors.push(e),this.twoColors.length===2&&this.twoColors.every(t=>t.color===e.color)?this.addFlippedColors(e.color):this.twoColors.length===2&&this.hideFlippedColors(),this.points>=this.colors.length&&this.dom.addRestartGameContainer(()=>this.restartGame()))}addFlippedColors(e){this.flippedColors.push(e),this.twoColors=[],this.setPointsDisplay(++this.points)}setPointsDisplay(e){d.innerText=`${e}/${this.colors.length}`}hideFlippedColors(){setTimeout(()=>{this.twoColors.forEach(e=>e.hide()),this.twoColors=[]},1e3)}restartGame(){this.generatedColors=this.randomColorGenerator.generateRandomColors(this.colors),this.flippedColors=[],this.twoColors=[],this.points=0,this.setPointsDisplay(this.points),this.onRestart()}}const a=document.querySelector(".game-container");class g{constructor(){n(this,"restartGame",()=>{this.startGame()});this.colors=["orange","black","purple","green","yellow","red","blue","salmon"],this.gameplay=new f(this.colors,this.restartGame)}startGame(){this.drawGame(),this.gameplay.gameLogic()}drawGame(){a.replaceChildren(),this.gameplay.generatedColors.forEach(e=>{a.appendChild(e.el)}),d.innerText=`0/${this.colors.length}`}}new g().startGame();
